openapi: 3.0.0
info:
  title: news-aggregator
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8080/'
paths:
  /api/v1/articles:
    post:
      tags:
        - Article
      operationId: getArticles
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpRequest'
      responses:
        '200':
          description: getArticlesResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleCollection'
  /api/v1/users:
    post:
      tags:
        - User
      operationId: getUsers
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpRequest'
      responses:
        '200':
          description: getUsersResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
components:
  schemas:
    ExclusionCollectionDto:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExclusionDto'
          nullable: true
      type: object
    ExclusionDto:
      properties:
        column:
          type: string
        search:
          type: string
        operator:
          $ref: '#/components/schemas/ConditionOperator'
      type: object
    FilterCollectionDto:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FilterDto'
          nullable: true
      type: object
    FilterDto:
      properties:
        column:
          type: string
        search:
          type: string
        operator:
          $ref: '#/components/schemas/ConditionOperator'
      type: object
    SortDto:
      properties:
        column:
          type: string
        direction:
          $ref: '#/components/schemas/SortDirection'
      type: object
    ConditionOperator:
      properties:
        LIKE:
          type: object
          enum:
            - like
        EQUAL:
          type: object
          enum:
            - '='
        MORE:
          type: object
          enum:
            - '>'
        LESS:
          type: object
          enum:
            - '<'
        MORE_OR_EQUAL:
          type: object
          enum:
            - '>='
        LESS_OR_EQUAL:
          type: object
          enum:
            - '<='
        IN:
          type: object
          enum:
            - in
      type: string
      enum:
        - LIKE
        - EQUAL
        - MORE
        - LESS
        - MORE_OR_EQUAL
        - LESS_OR_EQUAL
        - IN
    SortDirection:
      properties:
        DESC:
          type: object
          enum:
            - desc
        ASC:
          type: object
          enum:
            - asc
      type: string
      enum:
        - DESC
        - ASC
    HttpRequest:
      properties:
        filters:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/FilterCollectionDto'
        exclusions:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ExclusionCollectionDto'
        sort:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/SortDto'
        page:
          type: integer
          nullable: true
        limit:
          type: integer
          nullable: true
        perPage:
          type: integer
          nullable: true
      type: object
    Article:
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        source:
          type: string
      type: object
    ArticleCollection:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/BaseResourceCollection'
        -
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Article'
          type: object
    BaseResourceCollection:
      properties:
        links:
          properties:
            first:
              type: string
            last:
              type: string
            prev:
              type: string
            next:
              type: string
          type: object
        path:
          type: string
        per_page:
          type: integer
        to:
          type: integer
        total:
          type: integer
      type: object
    User:
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
      type: object
    UserCollection:
      type: object
      allOf:
        -
          $ref: '#/components/schemas/BaseResourceCollection'
        -
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/User'
          type: object
tags:
  -
    name: Article
    description: Article
  -
    name: User
    description: User
